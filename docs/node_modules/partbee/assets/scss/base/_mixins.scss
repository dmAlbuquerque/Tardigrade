@mixin padding-height($value) {
    padding-top: $value;
    padding-bottom: $value;
}
@mixin margin-height($value) {
    margin-top: $value;
    margin-bottom: $value;
}
// Contrasting
@mixin contrast($main_color) {
    &.contrast {
        color: $color_text_contrast;

        p {
            color: $color_text_contrast;
        }

        .contrast a,
        a,
        p a,
        span a {
            text-decoration: underline;
            color: $color_text_contrast;

            &:focus {
                color: $main_color;
                background-color: $color_text_contrast !important;
            }

            &:hover {
                text-decoration: none;
                color: $color_text_contrast;
            }

            &:after,
            &:before {
                color: $color_text_contrast;
            }
        }

        h1,
        h2,
        h3,
        h4,
        h5,
        h6 {
            color: $color_text_contrast;

            small {
                color: $color_text_contrast;
            }
        }

        hr {
            background-color: $color_text_contrast;
        }
    }
}
@mixin custom_pages($main_color, $text1, $holver_color, $text2 , $active_color, $text3) {
    li {
        a {
            border-color: darken($main_color, 10%);
            color:$text1;
            background-color: $main_color;

            &:focus,
            &:hover {
                color: $text2;
                border-color: darken($holver_color, 10%);
                background-color: $holver_color;
            }
        }

        &.active {
            a {
                color: $text3;
                border-color: darken($active_color, 10%);
                background-color: $active_color;

                &:hover {
                    cursor: default;
                    color: $text3;
                    border-color: darken($active_color, 10%);
                    background-color: $active_color;
                }
            }
        }
    }
}
@mixin custonNavigation($main_color) {
  @extend %menu_generics;
  background-color: $main_color;

  &.nav-block{
    background-color: transparent;
    nav[role="menu"] {
      a{
        display: block;
        background-color: $main_color;
        & + a{
          margin-top: 5px;
        }

        @include mediaBySize(xs) {
          text-align: left;
        }
      }
    }
  }

  nav[role="menu"] {
      a {
          @include mediaBySize(xs) {
              color: $main_color;
          }

          &:focus,
          &:hover {
              background-color: darken($main_color, 10%);
              @include mediaBySize(xs) {
                  color: darken($main_color, 10%);
                  background-color: lighten($main_color, 35%);
              }
          }

          &.active,
          &:active {
              background-color: darken($main_color, 15%);
          }
      }
  }
}

@mixin framebox_custom($main_color) {
    border-color: darken($main_color, 10%);
    &:hover, &:focus, &:active{
        border-color: darken($main_color, 15%);
        @include shadowbox(10px, darken($main_color, 10%));
    }
}
// CSS3 Mixins
@mixin transform($tX, $tY, $r, $s) {
    -webkit-transform: translateX($tX) translateY($tY) rotate($r) scale($s);
    -moz-transform: translateX($tX) translateY($tY) rotate($r) scale($s);
    -ms-transform: translateX($tX) translateY($tY) rotate($r) scale($s);
    -o-transform: translateX($tX) translateY($tY) rotate($r) scale($s);
    transform: translateX($tX) translateY($tY) rotate($r) scale($s);
}
@mixin translate($valueX, $valueY) {
    -webkit-transform: translateX($valueX) translateY($valueY);
    -moz-transform: translateX($valueX) translateY($valueY);
    -ms-transform: translateX($valueX) translateY($valueY);
    -o-transform: translateX($valueX) translateY($valueY);
    transform: translateX($valueX) translateY($valueY);
}
@mixin zoom($scale) {
    -webkit-transform: scale($scale);
    -moz-transform: scale($scale);
    -ms-transform: scale($scale);
    -o-transform: scale($scale);
    transform: scale($scale);
}
@mixin transition($time) {
    -webkit-transition: all $time ease;
    -moz-transition: all $time ease;
    -ms-transition: all $time ease;
    -o-transition: all $time ease;
    transition: all $time ease;
}
@mixin shadowbox($size, $color) {
    -webkit-box-shadow: 0 0 $size 2px $color;
    box-shadow: 0 0 $size 2px $color;
}
@mixin box-sizing($value) {
    -webkit-box-sizing: $value;
    -moz-box-sizing: $value;
    box-sizing: $value;
}
// Responsivel Mixins
@mixin media($queryString) {
     @media #{$queryString}{
        @content;
    }
}
@mixin mediaBySize($size) {
    $media_data: map-get($breakpoints, $size);
    @include media(map-get($media_data, "maxQuery")) {
         @content;
    }
}
@mixin mediaForSize($size) {
    $media_data: map-get($breakpoints, $size);
    @include media(map-get($media_data, "rangeQuery")) {
         @content;
    }
}
@mixin mediaUpSize($size) {
    $media_data: map-get($breakpoints, $size);
    @include media(map-get($media_data, "minQuery")) {
         @content;
    }
}
//No bootstrap filter
@mixin noBootstrapStatus($value) {
     @if $ignoreBootstrap == $value{
        @content;
    }
}
